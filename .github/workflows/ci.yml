name: ci (tests + coverage)

on:
  push:
    branches: [ "**" ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    # Els job-runs marcats com experimental no fan fallar el workflow
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22]
        experimental: [false]
        include:
          - node: 24
            experimental: true

    # Necessari per commitejar el badge (JSON) a la branca principal
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Run tests + coverage (Vitest)
        run: npm run test:cov
        # Recordatori: a vitest.config.ts cal tenir reporter 'json-summary'
        # coverage: { provider: 'v8', reporter: ['text','html','lcov','json-summary'] }

      - name: Upload coverage HTML (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-node${{ matrix.node }}
          path: coverage
          if-no-files-found: ignore

      # Genera un endpoint JSON perquè shields.io mostri el badge de coverage
      - name: Build coverage endpoint JSON (lines %)
        if: matrix.experimental == false
        run: |
          node -e "const s=require('./coverage/coverage-summary.json');\
          const pct=s.total?.lines?.pct ?? 0; \
          const color=pct>=95?'brightgreen':pct>=90?'green':pct>=80?'yellowgreen':pct>=70?'yellow':'orange'; \
          const badge={schemaVersion:1,label:'coverage',message:pct.toFixed(1)+'%',color}; \
          require('fs').mkdirSync('badges',{recursive:true}); \
          require('fs').writeFileSync('badges/coverage.json', JSON.stringify(badge));"

      # Commiteja només si hi ha canvis, i només des de Node 22 a main (evita carreres)
      - name: Commit coverage endpoint JSON
        if: github.ref == 'refs/heads/main' && matrix.experimental == false && matrix.node == 22
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add badges/coverage.json

          # Si no hi ha res a commitejar, surt net
          if git diff --staged --quiet; then
            echo "No changes"
            exit 0
          fi

          git commit -m "chore: update coverage endpoint [skip ci]"
          git push
